/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include "../keys_colemak.h"
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_58keys.h"

#define COLEMAK        0
#define NAV            1
#define NUM            2
#define SYM            3
#define WORKSPACE_NAV  4

// Helper layers for Bilateral Combinations
#define LAYER_LeftPinky  5
#define LAYER_LeftRing  6
#define LAYER_LeftMiddy  7
#define LAYER_LeftIndex  8
#define LAYER_LHN 9

#define LAYER_RightPinky 10
#define LAYER_RightRing 11
#define LAYER_RightMiddy 12
#define LAYER_RightIndex 13
#define LAYER_RHN 14

#define KEYS_L LT5 LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0 LF5 LF4 LF3 LF2 LF1 LF0
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 RF0 RF1 RF2 RF3 RF4 RF5
#define THUMBS LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3

#define HYPER(arg) LG(LC(LA(N0)))
#define HYPER_0 LG(LC(LA(N0)))
#define HYPER_1 LG(LC(LA(N1)))
#define HYPER_2 LG(LC(LA(N2)))
#define HYPER_3 LG(LC(LA(N3)))
#define HYPER_4 LG(LC(LA(N4)))
#define HYPER_5 LG(LC(LA(N5)))
#define HYPER_6 LG(LC(LA(N6)))
#define HYPER_7 LG(LC(LA(N7)))
#define HYPER_8 LG(LC(LA(N8)))
#define HYPER_9 LG(LC(LA(N9)))

&caps_word {
     /delete-property/ ignore-modifiers;
    // continue-list = <UNDERSCORE  BACKSPACE DELETE LSHFT RSHFT>;
    continue-list = <BSPC DEL UNDERSCORE MINUS LSHFT RSHFT>; 
};

&num_word {  // num-word, requires PR #1451
    layers = <NUM>;
    continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
};

#define IDLE_MS 95

// Customization options for Bilateral Combinations
#define DIFFICULTY_LEVEL  4

#define PINKY_HOLDING_TIME 200
#define PINKY_HOLDING_TYPE "balanced"
#define PINKY_STREAK_DECAY IDLE_MS
#define HOMEY_HOLDING_TYPE "balanced"

#define ENFORCE_BILATERAL   // cancels single-handed home row mod+tap
#include "./bilateral_combinations.dts"

#define HOME_LP LeftPinky(A, COLEMAK)
#define HOME_LR LeftRing(R, COLEMAK)
#define HOME_LM LeftMiddy(S, COLEMAK)
#define HOME_LI LeftIndex(T, COLEMAK)

#define HOME_RI RightIndex(N, COLEMAK)
#define HOME_RM RightMiddy(E, COLEMAK)
#define HOME_RR RightRing(I, COLEMAK)
#define HOME_RP RightPinky(O, COLEMAK)

ZMK_BEHAVIOR(nrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <300>;
    quick-tap-ms = <125>;
    bindings = <&kp>, <&kp>;
)

#define HOME_LPN nrm LSFT N1
#define HOME_LRN nrm LCTL N2
#define HOME_LMN nrm LALT N3
#define HOME_LIN nrm LGUI N4

#define HOME_RIN nrm LSFT N7
#define HOME_RMN nrm LCTL N8
#define HOME_RRN nrm LALT N9
#define HOME_RPN nrm LGUI N0

/* left-hand LT */
ZMK_BEHAVIOR(pinky_llt, hold_tap,
    flavor = PINKY_HOLDING_TYPE;
    tapping-term-ms = <PINKY_HOLDING_TIME>;
    quick-tap-ms = <PINKY_REPEAT_DECAY>;
    require-prior-idle-ms = <PINKY_STREAK_DECAY>;
    bindings = <&mo>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand LT */
ZMK_BEHAVIOR(pinky_rlt, hold_tap,
    flavor = PINKY_HOLDING_TYPE;
    tapping-term-ms = <PINKY_HOLDING_TIME>;
    quick-tap-ms = <PINKY_REPEAT_DECAY>;
    require-prior-idle-ms = <PINKY_STREAK_DECAY>;
    bindings = <&mo>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

// tap: backspace | lshft + tap: delete | rshft + tap: shift-delete
ZMK_BEHAVIOR(bs_del, mod_morph,
    bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    keep-mods = <MOD_RSFT>;
)

ZMK_BEHAVIOR(capsw, mod_morph,
    bindings = <&caps_word>, <&kp CAPS>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

// tap: sticky key | hold: momentary layer
ZMK_BEHAVIOR(lt_sk, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <200>;
    bindings = <&mo>, <&sk>;
)

#define lt_sk_lsft(layer) lt_sk layer LSHIFT
#define lt_sk_rsft(layer) lt_sk layer RSHIFT

&sk {
    quick-release;
};

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 3000
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20

&mmv {
  acceleration-exponent = <1>;      // 1
  time-to-max-speed-ms = <500>;    // 40
  delay-ms = <0>;                   // 0
};

&msc {
  acceleration-exponent = <1>;      // 0
  time-to-max-speed-ms = <40>;      // 500
  delay-ms = <0>;                   // 10
};

#define U_MS_U mmv MOVE_UP
#define U_MS_D mmv MOVE_DOWN
#define U_MS_L mmv MOVE_LEFT
#define U_MS_R mmv MOVE_RIGHT
#define U_WH_U msc SCRL_UP
#define U_WH_D msc SCRL_DOWN
#define U_WH_L msc SCRL_LEFT
#define U_WH_R msc SCRL_RIGHT

/ {
    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "ARROW";
        };

        fat_arrow: fat_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "FAT_ARROW";
        };

        scope: scope {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "SCOPE";
        };

        fence: fence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
            label = "FENCE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
//    ┌────────┬───────┬───┬──────┬────────────┬──────────────────┐                             ┌──────────────────┬─────────┬─────┬───┬──────────────────┬───────────┐
//    │   `    │   1   │ 2 │  3   │     4      │        5         │                             │        6         │    7    │  8  │ 9 │        0         │     =     │
//    ├────────┼───────┼───┼──────┼────────────┼──────────────────┤                             ├──────────────────┼─────────┼─────┼───┼──────────────────┼───────────┤
//    │  tab   │   Q   │ W │  F   │     P      │        G         │                             │        J         │    L    │  U  │ Y │        ;         │     -     │
//    ├────────┼───────┼───┼──────┼────────────┼──────────────────┤                             ├──────────────────┼─────────┼─────┼───┼──────────────────┼───────────┤
//    │  esc   │   A   │ R │  S   │     T      │        D         │                             │        H         │    N    │  E  │ I │        O         │     '     │
//    ├────────┼───────┼───┼──────┼────────────┼──────────────────┼────────────┐   ┌────────────┼──────────────────┼─────────┼─────┼───┼──────────────────┼───────────┤
//    │ &capsw │ num-z │ X │  C   │     V      │        B         │     [      │   │     ]      │        K         │    M    │  ,  │ . │ &pinky_rlt NUM / │ &num_word │
//    └────────┴───────┴───┼──────┼────────────┼──────────────────┼────────────┤   ├────────────┼──────────────────┼─────────┼─────┼───┴──────────────────┴───────────┘
//                         │ seyr │ lalt(bspc) │ lt_sk SYM lsftFT │ lt NAV spc │   │ lt NAV ent │ lt_sk SYM rsftFT │ &bs_del │ spc │
//                         └──────┴────────────┴──────────────────┴────────────┘   └────────────┴──────────────────┴─────────┴─────┘
  &kp GRAVE   &kp N1                   &kp N2     &kp N3        &kp N4         &kp N5                                              &kp N6            &kp N7     &kp N8      &kp N9     &kp N0                &kp EQUAL
  &kp TAB     &kp Q                    &kp W      &kp F         &kp P          &kp G                                               &kp J             &kp L      &kp U       &kp Y      &kp SEMI              &kp MINUS
  &kp ESC     &HOME_LP                 &HOME_LR   &HOME_LM      &HOME_LI       &kp D                                               &kp H             &HOME_RI   &HOME_RM    &HOME_RR   &HOME_RP              &kp SQT
  &capsw      &pinky_llt LAYER_LHN Z   &kp X      &kp C         &kp V          &kp B             &kp LBKT            &kp RBKT      &kp K             &kp M      &kp COMMA   &kp DOT    &pinky_rlt NUM FSLH   &num_word
                                                  &key_repeat   &kp LA(BSPC)   &lt_sk SYM LSFT   &lt NAV SPACE       &lt NAV RET   &lt_sk SYM RSFT   &bs_del    &kp SPACE
            >;
        };

        navigation {
            bindings = <
//    ┌────────┬──────┬──────┬──────────┬──────────┬──────────┐               ┌──────┬─────────┬─────────┬─────────┬──────┬──────┐
//    │ bt_clr │ bri- │ bri+ │ bt_sel 0 │ bt_sel 1 │ bt_sel 2 │               │ prev │  play   │  next   │  mute   │ vold │ volu │
//    ├────────┼──────┼──────┼──────────┼──────────┼──────────┤               ├──────┼─────────┼─────────┼─────────┼──────┼──────┤
//    │        │      │      │ bt_sel 3 │ bt_sel 4 │ out_ tog │               │ down │  rght   │ &U_MS_U │  lclk   │ rclk │      │
//    ├────────┼──────┼──────┼──────────┼──────────┼──────────┤               ├──────┼─────────┼─────────┼─────────┼──────┼──────┤
//    │        │ lsft │ lctl │   lalt   │   lgui   │          │               │ left │ &U_MS_L │ &U_MS_D │ &U_MS_R │      │      │
//    ├────────┼──────┼──────┼──────────┼──────────┼──────────┼─────┐   ┌─────┼──────┼─────────┼─────────┼─────────┼──────┼──────┤
//    │        │      │      │          │          │          │     │   │     │  up  │         │         │         │      │      │
//    └────────┴──────┴──────┼──────────┼──────────┼──────────┼─────┤   ├─────┼──────┼─────────┼─────────┼─────────┴──────┴──────┘
//                           │          │          │          │     │   │     │      │         │         │
//                           └──────────┴──────────┴──────────┴─────┘   └─────┴──────┴─────────┴─────────┘
  &bt BT_CLR   &kp C_BRIGHTNESS_DEC   &kp C_BRIGHTNESS_INC   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2                         &kp C_PREV   &kp C_PLAY_PAUSE   &kp C_NEXT   &kp K_MUTE   &kp C_VOL_DN   &kp C_VOLUME_UP
  &trans       &trans                 &trans                 &bt BT_SEL 3   &bt BT_SEL 4   &out OUT_TOG                         &kp DOWN     &kp RIGHT          &U_MS_U      &mkp MB1     &mkp MB2       &trans
  &trans       &kp LSHFT              &kp LCTRL              &kp LALT       &kp LCMD       &trans                               &kp LEFT     &U_MS_L            &U_MS_D      &U_MS_R      &trans         &trans
  &trans       &trans                 &trans                 &trans         &trans         &trans         &trans       &trans   &kp UP       &trans             &trans       &trans       &trans         &trans
                                                             &trans         &trans         &trans         &trans       &trans   &trans       &trans             &trans
            >;
        };

        number {
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┬─────┐               ┌─────┬─────┬─────┬─────┬─────┬─────┐
//    │     │ f1  │ f2  │ f3  │ f4  │ f5  │               │ f6  │ f7  │ f8  │ f9  │ f10 │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │               │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │  1  │  2  │  3  │  4  │  5  │               │  6  │  7  │  8  │  9  │  0  │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┐   ┌─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │   │     │     │     │     │     │     │     │
//    └─────┴─────┴─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┴─────┴─────┘
//                      │     │     │     │     │   │     │     │     │     │
//                      └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘
  &trans   &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                         &kp F6   &kp F7      &kp F8      &kp F9      &kp F10     &trans
  &trans   &trans      &trans      &trans      &trans      &trans                         &trans   &trans      &trans      &trans      &trans      &trans
  &trans   &HOME_LPN   &HOME_LRN   &HOME_LMN   &HOME_LIN   &kp N5                         &kp N6   &HOME_RIN   &HOME_RMN   &HOME_RRN   &HOME_RPN   &trans
  &trans   &trans      &trans      &trans      &trans      &trans   &trans       &trans   &trans   &trans      &trans      &trans      &trans      &trans
                                   &trans      &trans      &trans   &trans       &trans   &trans   &trans      &trans
            >;
        };

        symbol {
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┬─────┐               ┌─────┬─────┬─────┬─────┬─────┬─────┐
//    │     │     │     │     │     │     │               │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │ ->  │  '  │  <  │  >  │  "  │  ^  │               │  #  │  $  │  {  │  }  │  %  │ ::  │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │ =>  │  _  │  -  │  +  │  =  │  &  │               │  |  │  :  │  [  │  ]  │  `  │ ``` │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┐   ┌─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │  ,  │  /  │  *  │  \  │  !  │     │   │     │  ~  │  @  │  (  │  )  │  ?  │     │
//    └─────┴─────┴─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┴─────┴─────┘
//                      │     │     │     │     │   │     │     │     │     │
//                      └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘
  &trans       &trans             &trans          &trans             &trans              &trans                                  &trans      &trans        &trans                 &trans                  &trans         &trans
  &arrow       &kp SINGLE_QUOTE   &kp LESS_THAN   &kp GREATER_THAN   &kp DOUBLE_QUOTES   &kp CARET                               &kp HASH    &kp DOLLAR    &kp LEFT_BRACE         &kp RIGHT_BRACE         &kp PERCENT    &scope
  &fat_arrow   &kp UNDERSCORE     &kp MINUS       &kp KP_PLUS        &kp EQUAL           &kp AMPERSAND                           &kp PIPE    &kp COLON     &kp LEFT_BRACKET       &kp RIGHT_BRACKET       &kp GRAVE      &fence
  &trans       &kp COMMA          &kp SLASH       &kp ASTERISK       &kp BACKSLASH       &kp EXCLAMATION   &trans       &trans   &kp TILDE   &kp AT_SIGN   &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS   &kp QUESTION   &trans
                                                  &trans             &trans              &trans            &trans       &trans   &trans      &trans        &trans
            >;
        };

        workspace_nav {
            bindings = <
//    ┌─────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┐               ┌───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬─────┐
//    │     │               │               │               │               │               │               │               │               │               │               │               │     │
//    ├─────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤               ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼─────┤
//    │     │ lsft(HYPER_1) │ lsft(HYPER_2) │ lsft(HYPER_3) │ lsft(HYPER_4) │ lsft(HYPER_5) │               │ lsft(HYPER_6) │ lsft(HYPER_7) │ lsft(HYPER_8) │ lsft(HYPER_9) │ lsft(HYPER_0) │     │
//    ├─────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤               ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼─────┤
//    │     │    HYPER_1    │    HYPER_2    │    HYPER_3    │    HYPER_4    │    HYPER_5    │               │    HYPER_6    │    HYPER_7    │    HYPER_8    │    HYPER_9    │    HYPER_0    │     │
//    ├─────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼─────┐   ┌─────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼─────┤
//    │     │               │               │               │               │               │     │   │     │               │               │               │               │               │     │
//    └─────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┼─────┤   ├─────┼───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴─────┘
//                                          │               │               │               │     │   │     │               │               │               │
//                                          └───────────────┴───────────────┴───────────────┴─────┘   └─────┴───────────────┴───────────────┴───────────────┘
  &trans   &trans            &trans            &trans            &trans            &trans                                  &trans            &trans            &trans            &trans            &trans            &trans
  &trans   &kp LS(HYPER_1)   &kp LS(HYPER_2)   &kp LS(HYPER_3)   &kp LS(HYPER_4)   &kp LS(HYPER_5)                         &kp LS(HYPER_6)   &kp LS(HYPER_7)   &kp LS(HYPER_8)   &kp LS(HYPER_9)   &kp LS(HYPER_0)   &trans
  &trans   &kp HYPER_1       &kp HYPER_2       &kp HYPER_3       &kp HYPER_4       &kp HYPER_5                             &kp HYPER_6       &kp HYPER_7       &kp HYPER_8       &kp HYPER_9       &kp HYPER_0       &trans
  &trans   &trans            &trans            &trans            &trans            &trans            &trans       &trans   &trans            &trans            &trans            &trans            &trans            &trans
                                               &trans            &trans            &trans            &trans       &trans   &trans            &trans            &trans
            >;
        };

        BILATERAL_LAYER_LEFT(left_pinky_tap);
        BILATERAL_LAYER_LEFT(left_ring_tap);
        BILATERAL_LAYER_LEFT(left_middy_tap);
        BILATERAL_LAYER_LEFT(left_index_tap);

        left_hand_num {
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┬─────┐               ┌─────┬─────┬─────┬─────┬─────┬─────┐
//    │     │     │     │     │     │     │               │     │  1  │  2  │  3  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │               │     │  4  │  5  │  6  │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │               │  6  │  7  │  8  │  9  │  0  │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┐   ┌─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │   │     │     │     │     │     │     │     │
//    └─────┴─────┴─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┴─────┴─────┘
//                      │     │     │     │     │   │     │     │     │     │
//                      └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘
  &trans   &trans   &trans   &trans   &trans   &trans                         &trans   &kp N1   &kp N2   &kp N3   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                         &trans   &kp N4   &kp N5   &kp N6   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                         &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &trans
  &trans   &trans   &trans   &trans   &trans   &trans   &trans       &trans   &trans   &trans   &trans   &trans   &trans   &trans
                             &trans   &trans   &trans   &trans       &trans   &trans   &trans   &trans
            >;
        };


        BILATERAL_LAYER_RIGHT(right_pinky_tap);
        BILATERAL_LAYER_RIGHT(right_ring_tap);
        BILATERAL_LAYER_RIGHT(right_middy_tap);
        BILATERAL_LAYER_RIGHT(right_index_tap);

        right_hand_num {
            bindings = <
//    ┌─────┬─────┬─────┬─────┬─────┬─────┐               ┌─────┬─────┬─────┬─────┬─────┬─────┐
//    │     │     │     │     │     │     │               │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │               │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤               ├─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │  1  │  2  │  3  │  4  │  5  │               │     │     │     │     │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┼─────┐   ┌─────┼─────┼─────┼─────┼─────┼─────┼─────┤
//    │     │     │     │     │     │     │     │   │     │     │     │     │     │     │     │
//    └─────┴─────┴─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┴─────┴─────┘
//                      │     │     │     │     │   │     │     │     │     │
//                      └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘
  &trans   &trans   &trans   &trans   &trans   &trans                         &trans   &trans   &trans   &trans   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans                         &trans   &trans   &trans   &trans   &trans   &trans
  &trans   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                         &trans   &trans   &trans   &trans   &trans   &trans
  &trans   &trans   &trans   &trans   &trans   &trans   &trans       &trans   &trans   &trans   &trans   &trans   &trans   &trans
                             &trans   &trans   &trans   &trans       &trans   &trans   &trans   &trans
            >;
        };
    };
};

/*
qmk:json:start
{
  "layout": [
    "x x x x x x _ _ _ x x x x x x",
    "x x x x x x _ _ _ x x x x x x",
    "x x x x x x _ _ _ x x x x x x",
    "x x x x x x x _ x x x x x x x",
    "_ _ _ x x x x _ x x x x _ _ _"
  ],
  "comment_preview": {
    "keymap_overrides": {
      "&HOME_LP": "A",
      "&HOME_LR": "R",
      "&HOME_LM": "S",
      "&HOME_LI": "T",
      "&HOME_RI": "N",
      "&HOME_RM": "E",
      "&HOME_RR": "I",
      "&HOME_RP": "O",
      "&HOME_LPN": "1",
      "&HOME_LRN": "2",
      "&HOME_LMN": "3",
      "&HOME_LIN": "4",
      "&HOME_RIN": "7",
      "&HOME_RMN": "8",
      "&HOME_RRN": "9",
      "&HOME_RPN": "0",
      "&pinky_llt LAYER_LHN Z": "num-z",
      "&pinky_rlt NUM /": "num-z",
      "&kp KP_PLUS": "+",
      "&arrow": "->",
      "&scope": "::",
      "&fence": "```",
      "&fat_arrow": "=>"
    }
  }
}
qmk:json:end
*/

/* vim: set ft=dts */
